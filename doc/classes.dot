graph classes {
	
	graph [bgcolor=transparent]
	node [shape=record,style=filled,fillcolor=white]

	Vector [label="{Vector\<U\>|
			  U x\l|
			  U y\l|
			  U z\l}"]

	Element [label="{Node\<T,U\>|
			  Vector\<U\> position\l|
			  T * data\l}"]

	Sphere [label="{Sphere\<U\>|
			Vector\<U\> position\l|
			U radius\l|
			bool contains(const Vector\<U\> &v)\l|
			bool intersects(const Sphere\<U\> &other)\l}"]

	Cuboid [label="{Cuboid\<U\>|
			Vector\<U\> position\l|
			Vector\<U\> dimensions\l|
			bool contains(const Vector\<U\> &v)\l|
			bool intersects(const Cuboid\<U\> &other)\l}"]

	QuadTree [label="{QuadTree\<T,U\>|
			   Cuboid\<U\> boundary\l|
			   unsigned int capacity\l|
			   std::vector\<Node\<T,U\>\> nodes[capacity]\l|
			   QuadTree * NW\l|
			   QuadTree * NE\l|
			   QuadTree * SE\l|
			   QuadTree * SW\l|
			   bool insert(Node\<T,U\> node)\l|
			   std::vector\<Node\<T,U\>\> query(Cuboid\<U\> range)\l|
			   std::vector\<Node\<T,U\>\> query(Sphere\<U\> range)\l|
			   void subdivide()\l}"]
	
	OcTree [label="{OcTree\<T,U\>|
			  Cuboid\<U\> boundary\l|
			  unsigned int capacity\l|
			  std::vector\<Node\<T,U\>\> nodes[capacity]\l|
			  OcTree * NWN\l|
			  OcTree * NEN\l|
			  OcTree * SEN\l|
			  OcTree * SWN\l|
			  OcTree * NWS\l|
			  OcTree * NES\l|
			  OcTree * SES\l|
			  OcTree * SWS\l|
			  bool insert(Node\<T,U\> node)\l|
			  std::vector\<Node\<T,U\>\> query(Cuboid\<U\> range)\l|
			  std::vector\<Node\<T,U\>\> query(Sphere\<U\> range)\l|
			  void subdivide()\l}"]
	
	Vector -- Element
	Vector -- Cuboid
	Vector -- Sphere
	Element -- QuadTree
	Element -- OcTree
	Cuboid -- QuadTree
	Cuboid -- OcTree
	QuadTree -- QuadTree
	OcTree -- OcTree

}
